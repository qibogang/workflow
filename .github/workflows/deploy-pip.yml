name: Deploy with pip 

on:

  workflow_call:
    inputs:
        os:
          required: true 
          type: string 
        python-version:
          required: true 
          type: string   

jobs:
  build:
    runs-on: ${{ inputs.os }}
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ inputs.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ inputs.python-version }}
    - name: Build wheels
      run: |
        python -m pip install --upgrade pip
        pip install wheel
        python setup.py sdist bdist_wheel
    - name: Store wheels as artifacts
      uses: actions/upload-artifact@v3
      with:
        name: wheels
        path: dist
  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
    - name: Download wheels from artifact storage
      uses: actions/download-artifact@v3
      with:
        name: wheels
        path: dist
    - name: Setup Python
      uses: actions/setup-python@v4
    - name: Publish distribution to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        password: ${{ secrets.PYPI_TOKEN }}
    - uses: actions/checkout@v3
    - name: Build docker image and upload to ghcr
      run: |
        IMAGE_NAME=qibo
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        docker build . --file docker/dockerfile --tag $IMAGE_NAME --label "runnumber=${GITHUB_RUN_ID}"
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
        IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME
        # Change all uppercase to lowercase
        IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
        # Strip git ref prefix from version
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag $IMAGE_NAME $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION

name: Rules

on:
  workflow_call:
    inputs:
      os:
        description: 'Used operation system'
        required: true
        type: string
      python-version:
        description: 'Used python version'
        required: true
        type: string
      environment:
        description: 'Repo name'
        required: true
        type: string
      pip-extras:
        description: 'pip extra flags'
        required: false
        type: string
        default: " "
      doctests:
        description: 'Enable examples test'
        required: false
        type: boolean
        default: false
    secrets:
      codecov_token:
        required: false

jobs:
  build:
    runs-on: ${{ inputs.os }}
    defaults:
      run:
        shell: bash
    steps:
      - uses: actions/checkout@v4
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Install package
        run: |
          python -m pip install --upgrade pip
          pip install pytest-cov
          pip install pytest-env
          if [[ "${{ inputs.environment }}" == "qibo" ]]; then
            pip install git+https://github.com/qiboteam/qibojit
            pip install tensorflow
          fi
          if [[ "${{ inputs.environment }}" == "qibolab" || \
                "${{ inputs.environment }}" == "qibojit" ]]; then
            pip install git+https://github.com/qiboteam/qibo
          fi
          pip install pylint
          pip install ".[${{ inputs.pip-extras }}]"
      - name: Test with pylint
        run: |
          pylint src --errors-only
          pylint src --exit-zero
      - name: Test with pytest core
        run: |
          pytest
      - name: Test example
        if: ${{ inputs.doctests }}
        run: |
          sudo apt install pandoc
          make -C doc doctest
          OMP_NUM_THREADS=1 pytest examples/
      - name: Upload coverage to Codecov
        if: startsWith(runner.os, 'Linux')
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.codecov_token }}
          file: ./coverage.xml
          flags: unittests
          name: unit-tests
          fail_ci_if_error: true
